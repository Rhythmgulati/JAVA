
// 1.  *****
//     *****
//     *****
//     *****
//     *****

// 2.  *         1
//     **        2
//     ***       3
//     ****      4
//     *****     5

// 3.  *****
//     ****
//     ***
//     **
//     *

// 4.  1
//     1 2
//     1 2 3
//     1 2 3 4
//     1 2 3 4 5

// 5.  *     0
//     **    1   
//     ***   2 
//     ****  3
//     ***** 4
//     ****  5       9-5 
//     ***   6       9-6
//     **    7 
//     *     8

// 6.       *
//         **
//        ***
//       ****
//      *****

// 7.   *****
//       ****
//        ***
//         **
//          *

// 8.      *
//        ***
//       *****
//      *******
//     *********

// 9.  *********
//      *******
//       *****
//        ***
//         *

// 10.      *
//         * *
//        * * *
//       * * * *
//      * * * * *

// 11.  * * * * *
//       * * * *
//        * * *
//         * *
//          *

// 12.  * * * * *
//       * * * *
//        * * *
//         * *
//          *
//          *
//         * *
//        * * *
//       * * * *
//      * * * * *

// 13.      *
//         * *
//        *   *
//       *     *
//      *********

// 14.  *********
//       *     *
//        *   *
//         * *
//          *

// 15.      *
//         * *
//        *   *
//       *     *
//      *       *
//       *     *
//        *   *
//         * *
//          *

// 16.           1
//             1   1
//           1   2   1
//         1   3   3   1
//       1   4   6   4   1

// 17.      1
//         212
//        32123
//       4321234
//        32123
//         212
//          1

// 18.   **********
//       ****  ****
//       ***    ***
//       **      **
//       *        *
//       *        *
//       **      **
//       ***    ***
//       ****  ****
//       **********

// 19.    *        *
//        **      **
//        ***    ***
//        ****  ****
//        **********
//        ****  ****
//        ***    ***
//        **      **
//        *        *

// 20.    ****
//        *  *
//        *  *
//        *  *
//        ****

// 21.    1
//        2  3
//        4  5  6
//        7  8  9  10
//        11 12 13 14 15

// 22.    1
//        0 1
//        1 0 1
//        0 1 0 1
//        1 0 1 0 1

// 23.        *      *
//          *   *  *   *
//        *      *      *

// 24.    *        *
//        **      **
//        * *    * *
//        *  *  *  *
//        *   **   *
//        *   **   *
//        *  *  *  *
//        * *    * *
//        **      **
//        *        *

// 25.       *****
//          *   *
//         *   *
//        *   *
//       *****

// 26.   1 1 1 1 1 1
//       2 2 2 2 2
//       3 3 3 3
//       4 4 4
//       5 5
//       6

// 27.   1 2 3 4  17 18 19 20
//         5 6 7  14 15 16
//           8 9  12 13
//             10 11

// 28.      *
//         * *
//        * * *
//       * * * *
//      * * * * *
//       * * * *
//        * * *
//         * *
//          *

// 29.      
//        *        *
//        **      **
//        ***    ***
//        ****  ****
//        **********
//        ****  ****
//        ***    ***
//        **      **
//        *        *

// 30.         1
//           2 1 2
//         3 2 1 2 3
//       4 3 2 1 2 3 4
//     5 4 3 2 1 2 3 4 5

// 31.      4 4 4 4 4 4 4  
//          4 3 3 3 3 3 4   
//          4 3 2 2 2 3 4   
//          4 3 2 1 2 3 4   
//          4 3 2 2 2 3 4   
//          4 3 3 3 3 3 4   
//          4 4 4 4 4 4 4   

// 32.    E
//        D E
//        C D E
//        B C D E
//        A B C D E

// 33.    a
//        B c
//        D e F
//        g H i J
//        k L m N o

// 34.    E D C B A
//        D C B A
//        C B A
//        B A
//        A

// 35.    1      1
//        12    21
//        123  321
//        12344321

public class Patterns {

    // 1
    static void pattern1(int n) {
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                System.out.print(" * ");
            }
            System.out.println();
        }
    }

    static void pattern2(int n) {
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < i + 1; j++) {
                System.out.print(" * ");
            }
            System.out.println();
        }
    }

    static void pattern3(int n) {
        for (int i = n; i > 0; i--) {
            for (int j = 1; j <= i; j++) {
                System.out.print(" * ");
            }
            System.out.println();
        }
    }

    static void pattern4(int n) {
        for (int i = 0; i < n; i++) {
            for (int j = 0; j <= i; j++) {
                System.out.print(j + 1);
            }
            System.out.println();
        }
        System.out.println("--------------------------------");
        for (int i = n; i > 0; i--) {
            for (int j = 1; j <= i; j++) {
                System.out.print(j);
            }
            System.out.println();
        }
    }

    static void pattern5(int n) {
        for (int i = 0; i < n * 2; i++) {
            int colinrow = i > n ? 2 * n - i : i;
            for (int j = 0; j < colinrow; j++) {
                System.out.print(" * ");
            }
            System.out.println();
        }
    }

    static void pattern33(int n) {
        int chari = 65;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < i + 1; j++) {
                if (chari % 2 != 0) {
                    System.out.print((char) chari + " ");
                } else {
                    System.out.print(Character.toLowerCase((char) chari) + " ");
                }
                chari++;
            }
            System.out.println();
        }
    }

    public static void main(String[] args) {
        pattern1(4);
        System.out.println("---------------------------------------");
        pattern2(5);
        System.out.println("---------------------------------------");
        pattern3(5);
        System.out.println("---------------------------------------");
        pattern4(5);
        System.out.println("---------------------------------------");
        pattern5(4);
        System.out.println("---------------------------------------");

        pattern33(5);

    }

}
